// 연산자는 값(피연산자)을 조작해 새 값을 만듦.
// 가장 간단한 연산자는 산술 연산자임.
3 + 2                       // => 5: 더하기
3 - 2                       // => 1: 빼기
3 * 2                       // => 6: 곱하기
3 / 2                       // => 1.5: 나누기
points[1].x - pointsp[0].x  // => 1: 연산자를 더 복잡하게 써도 됨.
"3" + "2"                   // => "32": +는 숫자는 더하고 문자열은 병합한다.

// 자바스크립트에는 단축 산술 연산자도 몇 가지 있다.
let count = 0;              // 변수를 정의한다.
count++;                    // 변수의 값을 1 증가시킨다.
count--;                    // 변수의 값을 1 감소시킨다.
count += 2;                 // 2를 더한다. count = count + 2;와 같다.
count *= 3;                 // 3을 곱한다. count = count * 3;과 같다.
count                       // => 6: 변수 이름 역시 표현식이다.

// 일치 연산자, 관계 연산자는 두 값이 동등한지, 동등하지 않은지, 어느 쪽이 큰지
// 등을 검사한다. 이들은 true나 false로 평가됩니다.
let x = 2, y = 3;           // 여기서 = 기호는 할당 연산입니다, 비교가 아닙니다.
x === y                     // => false: x와 y가 일치(===)하지 않습니다.
x !== y                     // => true: x와 y가 불일치(!==)합니다.
x < y                       // => true: x는 y 미만(<)입니다.
x <= y                      // => true: x는 y 이하(<=)입니다.
x > y                       // => false: x는 y를 초과(>)하지 않습니다.
x >= y                      // => false: x는 y 이상(>=)이 아닙니다.
"two" === "three"           // => false: 서로 다른 문자열입니다.
"two" > "three"             // => true: "tw"는 알파벳순으로 "th"보다 나중에 옵니다.
false === (x > y)           // => true: false는 false와 일치합니다.

// 논리 연산자는 불 값을 조합하거나 부정합니다.
(x === 2) && (y === 3)      // => true: 둘 다 true, &&는 AND와 같은 뜻.
(x > 3) || (y < 3)          // => false: 어느 쪽도 true가 아닙니다.
                            // =>        ||는 OR과 같은 뜻입니다.
!(x === y)                  // => true: !는 불 값을 부정합니다.